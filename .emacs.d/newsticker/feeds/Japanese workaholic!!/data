;; -*- coding: utf-8 -*-
(("Japanese workaholic!!" "千代田区あたりで働くヒラリーマンが綴る日記." "http://nabeo.blogspot.com/" (20813 17145 724805 460000) feed 0 nil nil ((atom:id nil "tag:blogger.com,1999:blog-2703535343860163184") (lastBuildDate nil "Mon, 16 Apr 2012 03:54:12 +0000") (category nil "pc") (category nil "Fedora") (category nil "nxml") (category nil "mumamo") (category nil "xcast6") (category nil "starttls") (category nil "digital camera") (category nil "a piece in daily life") (category nil "anything") (category nil "sunbird") (category nil "Songbird") (category nil "iCalendar") (category nil "opensocial") (category nil "diskIONRead") (category nil "actionscript3") (category nil "docbook-xsl") (category nil "elscreen-gf") (category nil "dhcpd") (category nil "diskIONWritten") (category nil "Mac OS X") (category nil "cakephp") (category nil "Flex") (category nil "ptp") (category nil "bogofilter") (category nil "freebsd") (category nil "thunderbird") (category nil "GeekTool") (category nil "iPod nano") (category nil "iPod Touch") (category nil "shell script") (category nil "openbsd") (category nil "emacs") (category nil "gnupod") (category nil "mixi") (category nil "php") (category nil "vmware") (category nil "iCal") (category nil "inline patch for cocoa emacs") (category nil "PL2303") (category nil "冗長構成") (category nil "font") (category nil "mbox") (category nil "wanderlust") (category nil "spamassassin") (category nil "global") (category nil "imap") (category nil "Linux") (category nil "mh") (category nil "物欲") (category nil "xmlcatmgr") (category nil "mac") (category nil "MXML") (category nil "browse-url-browser-function") (category nil "snmp") (category nil "UC-SGT") (category nil "macports") (category nil "gmail") (category nil "diskIODevice") (category nil "org-mode") (title nil "Japanese workaholic!!") (description nil "千代田区あたりで働くヒラリーマンが綴る日記.") (link nil "http://nabeo.blogspot.com/") (managingEditor nil "noreply@blogger.com (nabeo)") (generator nil "Blogger") (openSearch:totalResults nil "57") (openSearch:startIndex nil "1") (openSearch:itemsPerPage nil "25") (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-4377261906861274626") (pubDate nil "Wed, 13 Apr 2011 13:42:00 +0000") (atom:updated nil "2011-04-13T22:42:24.739+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "font") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "Emacs 23.3のフォント設定") (atom:summary ((type . "text")) "以前書いたとおり、今はEmacs 23.3にinline_patchを充てて幸せな生活をおくっています。ついでにmacemacsjp MLでフォントの設定関係の話題があったのを思い出したので、参考にしつつ、フォント周りを見なおしてみました。

参考にしたサイトはid:setoryoheiさんとsakitoさんのサイトです。参考というか、id:setoryoheiさんの設定例(2)をまるっとコピーして、必要な文字セットをsakitoさんのサイトから拾ってきただけなんですが。。。

というわけで、今は英字をMenloで日本語をヒラギノ角ゴ ProNで指定して、こんな感じでやっています。


;; http://d.hatena.ne.jp/setoryohei/20110117
;; 設定例2
(let* ((size 12) ; ASCIIフォントのサイズ [9/10/12/14/15/") (link nil "http://nabeo.blogspot.com/2011/04/emacs-233.html") (author nil "noreply@blogger.com (nabeo)") (media:thumbnail ((xmlns:media . "http://search.yahoo.com/mrss/") (url . "http://3.bp.blogspot.com/-OugFHA2O-2w/TaWn2C177oI/AAAAAAAABQI/N7xBZtU-tXU/s72-c/110413-0001.png") (height . "72") (width . "72"))) (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-188413950381069551") (pubDate nil "Mon, 11 Apr 2011 14:28:00 +0000") (atom:updated nil "2011-04-12T00:14:43.638+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "MXML") (category ((domain . "http://www.blogger.com/atom/ns#")) "actionscript3") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (category ((domain . "http://www.blogger.com/atom/ns#")) "mumamo") (category ((domain . "http://www.blogger.com/atom/ns#")) "Flex") (title nil "emacsでMXMLとactionscript3を編集できるようにする (あるいはmumamoの使い方)") (atom:summary ((type . "text")) "ググッても特にあんまり情報がなかったので、晒します。勘違いしていたり、もっといい方法があったら教えてください。

きちんとAdobeにお金を払うと、Flex BuilderというFlexの統合開発環境を手に入れることができますが、とりあえず、Flexを使ってみたいという場合はオープンソースで公開されているFlex SDKを使うのが吉だと思います。まぁ、本気でFlexの開発をするんだったらFlex Builderは必須だと思いますけど。そういえば、Flexの統合開発環境ではFlex Developerというのもあるらしいですけど、Windows向けなのでよく知りません。

で、Flex SDKにはコンパイルするためのツールはありますが、コードはテキストエディタを使って書く必要があります。コードアシストがないテキストエディタでコードを書くのは苦行にしかならないので、Emacs") (link nil "http://nabeo.blogspot.com/2011/04/emacsmxmlactionscript3-mumamo.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-6476048830179823834") (pubDate nil "Thu, 24 Mar 2011 13:38:00 +0000") (atom:updated nil "2011-03-24T22:48:04.585+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "inline patch for cocoa emacs") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (category ((domain . "http://www.blogger.com/atom/ns#")) "Mac OS X") (title nil "emacs23.3をinline_patch付きでビルドしてみた") (atom:summary ((type . "text")) "めでたくemacs 23.3がリリースされました。inline_patchのリリースアナウンスは出ていませんが、一応svnレポジトリにコミットされているみたいです。今回からは今までのパッチの他にCocoa Emacsのピコピコ問題([Macemacsjp-users 1678]から始まるスレッド)とxcode4でビルドするためのパッチが同梱されているようです。

僕の環境では必要ない(Mac OS X 10.6 + Xcode3)環境なのですが、一応xcode4でビルドするためのパッチも当てました。ビルドの手順は下記の通り。ちなみに、inline_patchのリビジョンは574です。

% mkdir -p ~/src/emacs23.3
% cd ~/src/emacs23.3
% wget http://ftp.gnu.org/gnu/emacs/emacs-23.3.tar.bz2") (link nil "http://nabeo.blogspot.com/2011/03/emacs233inlinepatch.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-2194199732520412336") (pubDate nil "Tue, 08 Feb 2011 14:24:00 +0000") (atom:updated nil "2011-02-08T23:24:43.048+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "UC-SGT") (category ((domain . "http://www.blogger.com/atom/ns#")) "PL2303") (category ((domain . "http://www.blogger.com/atom/ns#")) "Mac OS X") (title nil "Elecom社製USB-シリアル変換ケーブル(UC-SGT)をMac OS X 10.6で使う") (atom:summary ((type . "text")) "Emacs関連のポストが続いたり、Mac Book Proを買って浮かれポンチなポストをしたりしていますが、本業はインフラよりのネットワークエンジニアだったりします。で、本業で使うかどうかは別として、シリアルケーブルはネットワークエンジニアの嗜みとして使えるようにしておくべきでしょう、というポストです。

まず、僕が所有しているUSB-シリアル変換ケーブルはElecom社のUC-SGTという製品です。こいつは自分がM1の時に買ったので、かれこれ8年くらいの付き合いです。

Elecom社のサイトではWindows向けのドライバは提供されていますが、Mac向けのドライバは提供されていません。ただし、UC-SGTはProlific社のPL2303というチップを積んでいて、Prolific社のサイトではMac向けのドライバが提供されています。

というわけで、Prolific社製のドライバを") (link nil "http://nabeo.blogspot.com/2011/02/elecomusb-uc-sgtmac-os-x-106.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-7516391770649193652") (pubDate nil "Mon, 07 Feb 2011 15:14:00 +0000") (atom:updated nil "2011-02-08T00:17:49.368+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "browse-url-browser-function") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (category ((domain . "http://www.blogger.com/atom/ns#")) "Mac OS X") (title nil "mac os xだったらbrowse-url-browser-functionはopenでしょう") (atom:summary ((type . "text")) "ということで、以下の設定を適当なところに追加して幸せになりました。

(setq browse-url-browser-function 'browse-url-generic)
(setq browse-url-generic-program
(if (file-exists-p \"/usr/bin/open\")
\"/usr/bin/open\"))
") (link nil "http://nabeo.blogspot.com/2011/02/mac-os-xbrowse-url-browser-functionopen.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-5117532771590427760") (pubDate nil "Fri, 28 Jan 2011 14:32:00 +0000") (atom:updated nil "2011-01-28T23:32:58.598+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "emacsでネットワークインターフェイスにアドレスが付いているときだけ実行するようなelisp (改)") (atom:summary ((type . "text")) "emacsでネットワークインターフェイスにアドレスが付いているときだけ実行するようなelispでゴニョゴニョしたelispだけど、ちょっとダサいので、dolistを使って書きなおしてみた。で、書きなおした結果がこう。
(setq network-interface-names '(\"en0\" \"en1\")) ; ネットワークインターフェイスの名前のリスト
(dolist (currnet-network-interface-name network-interface-names)
  (if (car (network-interface-info currnet-network-interface-name))
      (progn
        ;; ネットワークアドレスが付いているネットワークインターフェイスを検出したら実行する処理を書く
        (return t") (link nil "http://nabeo.blogspot.com/2011/01/emacselisp_28.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-2894668493850448739") (pubDate nil "Tue, 25 Jan 2011 12:28:00 +0000") (atom:updated nil "2011-01-25T21:54:05.566+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "anything") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "anything-config.elで定義されている、anything-c-find-files-icons-directoryでコケる (解決編)") (atom:summary ((type . "text")) "先日の問題は解決しました。ちょっと不恰好だけですけど、以下のパッチをanything-config.elに当てるとひとまず解決です。

--- anything-config.el.orig     2011-01-21 23:13:54.000000000 +0900
+++ anything-config.el  2011-01-25 16:46:04.000000000 +0900
@@ -737,7 +737,9 @@

(defcustom anything-c-find-files-icons-directory
(and (window-system)
-       (concat (car image-load-path) \"tree-widget/default\"))
+       (dolist (i image-load-path)
+         (if ") (link nil "http://nabeo.blogspot.com/2011/01/anything-configelanything-c-find-files_25.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-1446742735886741906") (pubDate nil "Fri, 21 Jan 2011 15:28:00 +0000") (atom:updated nil "2011-01-22T01:16:37.151+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "anything") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "anything-config.elで定義されている、anything-c-find-files-icons-directoryでコケる") (atom:summary ((type . "text")) "世間の流れから3周ぐらい遅れて、ちょっとした思いつきでanythingを使い始めることにした。

導入はauto-install.elを入れて、auto-install-batchでanythingを指定して、(require 'anything-startup)をemacsの設定ファイルに書けばよいだけ。簡単ですね。

で、さっくり導入を終わらせていざemacsを立ち上げてみると、エラーで止まってしまう。emacsで吐かせたエラーは下記のとおり。
Debugger entered--Lisp error: (wrong-type-argument sequencep mew-icon-directory)
concat(mew-icon-directory \"tree-widget/default\")
(and (window-system) (concat (car ") (link nil "http://nabeo.blogspot.com/2011/01/anything-configelanything-c-find-files.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-5506822952180851084") (pubDate nil "Mon, 17 Jan 2011 13:43:00 +0000") (atom:updated nil "2011-01-17T22:51:51.220+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "Mac OS X") (category ((domain . "http://www.blogger.com/atom/ns#")) "GeekTool") (title nil "GeekToolの設定") (atom:summary ((type . "text")) "別エントリで書いていたGeekToolの設定。
uptime
#!/bin/sh
uptime| \\
awk '{printf \"Uptime: \" $3 \" \" $4 \" \" $5 \" \"}'; top -l 1 | \\
awk '/PhysMem/ {printf \"RAM : \" $8 \", \" }' ; top -l 2 | \\
awk '/CPU usage/ && NR > 5 {print $6, $7=\":\", $8, $9=\"user\", $10, $11=\"sys\", $12, $13}' 2> /dev/null

ps
ps -axr -o %cpu,%mem,user,comm | head -n 21

getaddr
#!/bin/bash
echo \"Active Network Interfaces\"
for netif in `netstat -rn ") (link nil "http://nabeo.blogspot.com/2011/01/geektool.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-3927830377610334057") (pubDate nil "Mon, 17 Jan 2011 13:27:00 +0000") (atom:updated nil "2011-01-17T22:37:04.453+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "Mac OS X") (title nil "Mac OS X 10.6 (Snow Leopard)に入れたアプリケーション") (atom:summary ((type . "text")) "昨年末に自宅で使用するMacBook Pro 13inchを購入したので、メモがわりにエントリをつくっておく。

まずは/Applicationsに入れたアプリケーション。

ClamXav.app
アンチウイルスアプリケーション
今は2系のベータが取れているので、そっちを入れる
Alfred.app
 ランチャーソフト
coral.app
後述のEmacs.appからプリンタに印刷するときに使う
Cyberduck.app
FTPクライアントアプリケーション
Dropbox.app
クラウド(笑)型ファイル共有サービスのクライアントアプリケーション
GitX.app
gitのGUIフロントエンド
Google Chrome.app
Webブラウザ
FirefoxやSafariよりも便利
Growl.app
各種アプリケーションの通知をしてくれる

iTerm.app (iTerm2)
") (link nil "http://nabeo.blogspot.com/2011/01/mac-os-x-106-snow-leopard.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-4541533270756537643") (pubDate nil "Sun, 16 Jan 2011 14:09:00 +0000") (atom:updated nil "2011-01-16T23:23:00.195+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "emacsでネットワークインターフェイスにアドレスが付いているときだけ実行するようなelisp") (atom:summary ((type . "text")) "Emacs の init.el でネットワークインターフェイスにアドレスが付いているときだけある関数を実行したいときはどーするんだ、という疑問からリファレンスを引き引き作ってみた。まず、Emacs 23.2で使える elisp の標準関数としてnetwork-interface-infoという関数が用意されている。この関数はマニュアルでは下記のように説明されている。
network-interface-info is a built-in function in `C source code'.

(network-interface-info IFNAME)

Return information about network interface named IFNAME.
The return value is a list (ADDR BCAST NETMASK HWADDR ") (link nil "http://nabeo.blogspot.com/2011/01/emacselisp.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-8003966802316493657") (pubDate nil "Fri, 04 Jun 2010 10:45:00 +0000") (atom:updated nil "2010-06-04T19:53:19.121+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "dhcpd") (category ((domain . "http://www.blogger.com/atom/ns#")) "openbsd") (category ((domain . "http://www.blogger.com/atom/ns#")) "冗長構成") (title nil "OpenBSDでdhcpサーバを冗長化する") (atom:summary ((type . "text")) "DHCPDの冗長構成
OpenBSDのdhcpd(8)にSYNCHRONISATIONという章がある。どうやら、dhcpdで払い出したアドレスを複数のホスト間でリアルタイムに同期できるらしい。この記述を参考にして冗長構成をとるように設定する。
/etc/dhcpd.conf
全てのホストで同一のdhcpd.confを保持する必要がある。
/etc/rc.conf と dhcpd の起動オプション
dhcpd の起動オプションに -Y と -y という同期のためのオプションが用意されている。それぞれの意味は下記のとおり。
-Y
同期メッセージを受信するためのNIC、もしくはIPv4アドレスを記述する。コロンで区切ればマルチキャスト用TTLを指定できる。TTLを記述していない場合はデフォルト値の1が適用される。
-y
同期メッセージを送信するためのNIC、もしくはIPv4アドレスを記述する。") (link nil "http://nabeo.blogspot.com/2010/06/openbsddhcp.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-3621086059203000474") (pubDate nil "Fri, 05 Jun 2009 11:54:00 +0000") (atom:updated nil "2009-06-05T21:33:52.210+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "inline patch for cocoa emacs") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "emacs23でインラインパッチが使えるようになった") (atom:summary ((type . "text")) "[Macemacsjp-users 1649]ではしもと氏からemacs23で使えるインラインパッチをSVNのリポジトリに登録した、という投稿があった。実は結構前からCarbon Emacsからemacs23に移行したいのだが、インラインパッチがあたらないため、移行を見送っていた。

今回のパッチでとりあえず動くようになったので、その顛末を書いておく。

まずはCVSでemacsのソースを落としてくる。

最近、cvs.savannha.gnu.orgがRAIDトラブルでサービス不能になっていたが、2009年6月4日には復旧していた。中の人に感謝しつつ、emacsのソースを落とす。


% cvs -d:pserver:anonymous@cvs.savannha.gnu.org:/sources/emacs login
% cvs -z3 -d:pserver:anonymous@") (link nil "http://nabeo.blogspot.com/2009/06/emacs23.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-9138034938927502354") (pubDate nil "Fri, 05 Jun 2009 11:36:00 +0000") (atom:updated nil "2009-06-05T20:52:33.042+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "starttls") (category ((domain . "http://www.blogger.com/atom/ns#")) "gmail") (category ((domain . "http://www.blogger.com/atom/ns#")) "wanderlust") (category ((domain . "http://www.blogger.com/atom/ns#")) "imap") (title nil "gmailのimap機能をwanderlustから使ってみる その2") (atom:summary ((type . "text")) "ずーと昔にgmailのimap機能をwanderlustから使ってみるていう記事をポストしたんだけど、どうやら古い情報になってしまったぽい。昔の記事ではsmtpにsslを使えと書いていたが、今のGMailの仕様ではstarttlsを使えといっている。今回は情報をアップデートして、環境を作り直すときに不幸にならないようにしておく。


(setq wl-smtp-posting-user \"gmailのメールアドレス\")
(setq wl-smtp-posting-server \"smtp.gmail.com\")
(setq wl-authenticate-type \"login\")
(setq wl-smtp-posting-port 587)
(setq wl-smtp-connection-type 'starttls)
(setq ") (link nil "http://nabeo.blogspot.com/2009/06/gmailimapwanderlust-2.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-5265093463130151132") (pubDate nil "Mon, 01 Jun 2009 12:08:00 +0000") (atom:updated nil "2009-06-01T21:42:34.736+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "openbsd") (title nil "OpenBSD 4.5の/var/backupに感動した話") (atom:summary ((type . "text")) "最近、色々考えることがあって、OpenBSD 4.5をまじめに使ってみている。

で、感動したのがOpenBSD(他の*BSDでも同じだと思うけど)は/var/backupに/etcの下にあるコンフィグファイルとかのバックアップを2世代分保持していて、変更があったらdaily cronで差分をroot宛てに\"hostname.domain daily output\"ていうsubjectで送信してくれる。つまり、このメールを後生大事にとっておくとマシンに万が一のことがあったら何とか復旧できるかもしれない。まぁ、こういう重要なファイルは自分でバックアップをとっておくとか、設定内容はちゃんとメモしておくとかすればいいんだけど、往々にしてそんなめんどくさいことは後回しになってしまう。なので、このシステムはずぼらな鯖管には嬉しすぎるシステムなわけ。

ただ、OpenBSDはあとからports") (link nil "http://nabeo.blogspot.com/2009/06/openbsd-45varbackup.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-9203054768870349375") (pubDate nil "Fri, 23 Jan 2009 11:14:00 +0000") (atom:updated nil "2009-01-29T18:27:48.669+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "global") (category ((domain . "http://www.blogger.com/atom/ns#")) "elscreen-gf") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "elscreen-gfのチートシート") (atom:summary ((type . "text")) "とーぜん、開発はemacsを使っていています。だって便利だもん。
で、コードを読むときにこの関数てどこで使われているか/定義されているかを知りたいときは多々あります。根性でgrepしてもいいですが、世の中にはGNU ID UtilsとかGNU GLOBALとか便利なツールもあるので、こういうツールを使ったほうが時間の節約にもなります。 しかも、emacsから使うならelscreen-gfという便利なlispがあります。まぁ、このあたりはelscreen-gfとかで検索したら色々出てくると思うからばっさり省略。

今日の本題はelscreen-gfでglobalを使うときのチートシートです。

elscreen-gfはglobalだけじゃなく、上記のGNU ID Utilsやgrepなども使えますが、phpの開発が主体なのでGNU GLOBALしか使っていません。一応、たしなみとしてGNU") (link nil "http://nabeo.blogspot.com/2009/01/elscreen-gf.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-3379363461184692861") (pubDate nil "Mon, 19 Jan 2009 08:46:00 +0000") (atom:updated nil "2009-01-19T18:04:32.941+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "ptp") (category ((domain . "http://www.blogger.com/atom/ns#")) "Linux") (category ((domain . "http://www.blogger.com/atom/ns#")) "Fedora") (title nil "ptp遊び (その後)") (atom:summary ((type . "text")) "かなーり以前にptp遊びをしていて、このBlogでもptpcamで遊んだら面白そう、というエントリを残したんだけど、実はあのあとにちょっとゴタゴタあってptpではちゃんと遊んでいませんでした。ただ、このBlogにGoogleからptpcamというキーワードでたどり着いている人がいるので、ちょっとだけアップデート。

て、言っても、Fedora 10でちょろっとだけ使ってみた、ということだけです。

えと、まず昔にlibptpで遊んだときはgcc4でコンパイルできないよ、ぎゃおーと叫んでいたと思いますが、Fedora 10ではきっちりコンパイルできました。とくにトリッキーなことはしていないです。ふつーに./configure && make && sudo make installでインストールまでいけると思います。ただ、libusb-develは必要かも。つかったバージョンは") (link nil "http://nabeo.blogspot.com/2009/01/ptp.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-5249731206114170622") (pubDate nil "Mon, 05 Jan 2009 11:05:00 +0000") (atom:updated nil "2009-01-05T20:09:02.977+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "diskIONRead") (category ((domain . "http://www.blogger.com/atom/ns#")) "snmp") (category ((domain . "http://www.blogger.com/atom/ns#")) "Fedora") (category ((domain . "http://www.blogger.com/atom/ns#")) "diskIONWritten") (category ((domain . "http://www.blogger.com/atom/ns#")) "diskIODevice") (title nil "なぞのUCD-DISKIO-MIB") (atom:summary ((type . "text")) "会社のFedoraなマシンのサーバステータスをrrdtoolsを使ってグラフ化してます。グラフ化している値の中でUCD-DISKIO-MIBのdiskIONReadとdiskIONWrittenを使ったディスクIOの読み込みと書き込みをグラフ化しているんだけど、最近ちょっと変。


どう変なのかというと、sdaのつもりでとっていたdiskIONReadやdiskIONWrittenの値がループでバイスの値になっているぽい。つまり、
  
    nabeo@foo:~[8413]% snmpwalk -c public -v 1 bar diskIODevice
    UCD-DISKIO-MIB::diskIODevice.1 = STRING: ram0
    UCD-DISKIO-MIB::diskIODevice.2 = STRING: ram1
    ") (link nil "http://nabeo.blogspot.com/2009/01/hoge.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-1475005235684298298") (pubDate nil "Mon, 05 Jan 2009 09:50:00 +0000") (atom:updated nil "2009-01-05T19:11:12.437+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "org-mode") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "org-modeでTODOを管理") (atom:summary ((type . "text")) "一年の計は元旦にあり、ではないが今年から自分のタスクをorg-modeを使って管理してみようと思う。ここでは自分用に設定と使い方をメモとして残しておく。

そもそも、これまでは自分のタスク管理は特にツールは使わず、メールやスケジュール帳などで管理をしていた。基本的にタスク処理は投入された時点での優先順位に従ってベストエフォートで行ってきたが、如何せんベストエフォートなのでドロップすることもあった。あと、自分の性能としてマルチタスクも弱いので、疑似マルチタスクでなんとか処理能力もあげたい、なんてことも考えている。

ということで、emacsの設定。今使っているemacsはM-x emacs-versionとするとGNU Emacs 22.3.1 (i386-apple-darwin9.5.0, Carbon Version 1.6.0) of 2008-11-01 on ") (link nil "http://nabeo.blogspot.com/2009/01/org-modetodo.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-664418185827550438") (pubDate nil "Mon, 10 Nov 2008 06:51:00 +0000") (atom:updated nil "2008-11-10T15:56:32.135+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "macports") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "Carbon Emacsでgclientを使う") (atom:summary ((type . "text")) "昔のエントリにCarbon Emacsでgclientが使えないよーーー。ぎゃぼー。と書いた気がするけど。何となく原因が分かりました。わかってしまえば、アホみたいな原因でした。

原因はcurlのビルド方法(というか、configureのオプション)にあったようです。

僕のマシンはmacportsで管理しているんだけど、僕のマシンではPATHの関係上、MacOS X付属のcurlよりもmacportsでインストールしているcurlが優先されます。このmacports版のcurlではデフォルトでは機能が制限されていて、インストールする際に必要な機能をvariantsで探して有効にする必要があります。このcurlのvariantsにsslサポートも含まれていて、僕の環境では無印のcurlがインストールされていたのでgclientがhttpsでアクセスしようとしてもcurlがsslを理解") (link nil "http://nabeo.blogspot.com/2008/11/carbon-emacsgclient.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-965631731301362910") (pubDate nil "Mon, 30 Jun 2008 13:06:00 +0000") (atom:updated nil "2008-06-30T22:29:09.646+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (category ((domain . "http://www.blogger.com/atom/ns#")) "php") (category ((domain . "http://www.blogger.com/atom/ns#")) "mumamo") (title nil "Carbon Emacsのphp-mode.elとmumamo") (atom:summary ((type . "text")) "かなり以前に「Carbon Emacsでmumamoとphp-modeをうまく連携できない」と叫んでいたが、なんとか解決できた。解決できたと言っても、「やっぱり、僕ってお間抜けね。てへ。」みたいな感じ。結論から言うと、本家のphp-modeを使ってはいたのが原因ぽい。あと、この記事で言及しているCarbon Emacsは2008年春版ね。

Carbon EmacsにはnXhtml modeが最初からインストールされていて、設定までがすんでいる。で、nXhtml modeにはmumamoに適応した、というよりもnXhtml modeに最適化されたphp-modeが入っている。ちなみに、nXml modeに付属しているphp-modeのバージョンは1.4.1-nxhtmlで本家で配布しているバージョンは1.4.0だった。

というわけで、自前の環境にあるphp-mode.elを読み込まずに") (link nil "http://nabeo.blogspot.com/2008/06/carbon-emacsphp-modeelmumamo.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-9155406419307495069") (pubDate nil "Tue, 22 Apr 2008 08:58:00 +0000") (atom:updated nil "2008-04-22T17:58:52.346+09:00") (title nil "test from g-client") (atom:summary ((type . "text")) "
    
	  
	  
		test from g-client
	  
    
  ") (link nil "http://nabeo.blogspot.com/2008/04/test-from-g-client.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-2144552547424011028") (pubDate nil "Wed, 26 Dec 2007 10:42:00 +0000") (atom:updated nil "2011-01-17T22:46:45.401+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "bogofilter") (category ((domain . "http://www.blogger.com/atom/ns#")) "wanderlust") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (category ((domain . "http://www.blogger.com/atom/ns#")) "Mac OS X") (title nil "spamフィルタを変えてみた") (atom:summary ((type . "text")) "wanderlustに移行して少したったけど、やっぱりspamassassinのspam判定の遅さには耐えられない。ということで、spamassassinを捨ててbogofilterに乗り換えてみた。幸い、MacPortsにはbogofilterのパッケージがあるので苦労せずにインストールまではできた。

で、困ったのはbogofilterの学習時にkakasiとnkfを使うべきかどうかということ。ググってみたら、使う人と使わない人が半々くらい。むぅぅぅ。wlのコードを読んでみると、kakasiとnkfはbogofilterを起動しているときに使っていないぽい。というわけで、kakasiとnkfは使わずに学習させてみた。学習はこんな感じ。


spamメールの学習(spamメールを保存しているディレクトリで)
for i in *; do
bogofilter -s $i
done


") (link nil "http://nabeo.blogspot.com/2007/12/spam.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-4577287270508296155") (pubDate nil "Fri, 14 Dec 2007 11:41:00 +0000") (atom:updated nil "2011-01-17T22:47:08.213+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "macports") (category ((domain . "http://www.blogger.com/atom/ns#")) "docbook-xsl") (category ((domain . "http://www.blogger.com/atom/ns#")) "xmlcatmgr") (category ((domain . "http://www.blogger.com/atom/ns#")) "Mac OS X") (title nil "記憶にないけど、ある") (atom:summary ((type . "text")) "久しぶりにMacPortsのメンテナンスで、必要なパッケージをアップグレードしようとしたら、gtk2のアップグレードでこけた。ていうか、gtk2の依存関係に新しくgtk-docが追加されて、このgtk-docのconfigureスクリプトが走っている箇所でエラーを吐いているみたい。以下がエラー内容の抜粋。


checking for xsltproc... /opt/local/bin/xsltproc
checking for XML catalog (/opt/local/etc/xml/catalog)... found
checking for xmlcatalog... /opt/local/bin/xmlcatalog
checking for DocBook XML DTD V4.1.2 in XML catalog... found
checking for ") (link nil "http://nabeo.blogspot.com/2007/12/blog-post.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")) (item nil (guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-1687047229360945086") (pubDate nil "Thu, 08 Nov 2007 07:37:00 +0000") (atom:updated nil "2007-11-08T16:41:06.326+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "Linux") (category ((domain . "http://www.blogger.com/atom/ns#")) "Songbird") (title nil "続:その黒い小鳥は美しい歌を奏でるか??") (atom:summary ((type . "text")) "というわけで、自宅のLinux BoxでSongbirdを試してみた。結果はうまくmp3ファイルを読み込んでくれなくて、残念な結果に終わりました。ちなみに自宅のLinux Boxはfedora core 7で基本的にfedora project由来のrpmしか使っていないです。

ちなみに、前回の追記にあった起動時のエラーはどうやらリモートからXを飛ばしてきた時に発生するもよう。自宅のLinux Boxで試したときは特にエラーは出ずに起動しました。") (link nil "http://nabeo.blogspot.com/2007/11/blog-post_08.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0")))) ("Emacs 23.3のフォント設定" nil "http://nabeo.blogspot.com/2011/04/emacs-233.html" (19877 43048) new 1 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-4377261906861274626") (pubDate nil "Wed, 13 Apr 2011 13:42:00 +0000") (atom:updated nil "2011-04-13T22:42:24.739+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "font") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "Emacs 23.3のフォント設定") (atom:summary ((type . "text")) "以前書いたとおり、今はEmacs 23.3にinline_patchを充てて幸せな生活をおくっています。ついでにmacemacsjp MLでフォントの設定関係の話題があったのを思い出したので、参考にしつつ、フォント周りを見なおしてみました。

参考にしたサイトはid:setoryoheiさんとsakitoさんのサイトです。参考というか、id:setoryoheiさんの設定例(2)をまるっとコピーして、必要な文字セットをsakitoさんのサイトから拾ってきただけなんですが。。。

というわけで、今は英字をMenloで日本語をヒラギノ角ゴ ProNで指定して、こんな感じでやっています。


;; http://d.hatena.ne.jp/setoryohei/20110117
;; 設定例2
(let* ((size 12) ; ASCIIフォントのサイズ [9/10/12/14/15/") (link nil "http://nabeo.blogspot.com/2011/04/emacs-233.html") (author nil "noreply@blogger.com (nabeo)") (media:thumbnail ((xmlns:media . "http://search.yahoo.com/mrss/") (url . "http://3.bp.blogspot.com/-OugFHA2O-2w/TaWn2C177oI/AAAAAAAABQI/N7xBZtU-tXU/s72-c/110413-0001.png") (height . "72") (width . "72"))) (thr:total nil "0"))) ("emacsでMXMLとactionscript3を編集できるようにする (あるいはmumamoの使い方)" nil "http://nabeo.blogspot.com/2011/04/emacsmxmlactionscript3-mumamo.html" (19875 4080) new 2 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-188413950381069551") (pubDate nil "Mon, 11 Apr 2011 14:28:00 +0000") (atom:updated nil "2011-04-12T00:14:43.638+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "MXML") (category ((domain . "http://www.blogger.com/atom/ns#")) "actionscript3") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (category ((domain . "http://www.blogger.com/atom/ns#")) "mumamo") (category ((domain . "http://www.blogger.com/atom/ns#")) "Flex") (title nil "emacsでMXMLとactionscript3を編集できるようにする (あるいはmumamoの使い方)") (atom:summary ((type . "text")) "ググッても特にあんまり情報がなかったので、晒します。勘違いしていたり、もっといい方法があったら教えてください。

きちんとAdobeにお金を払うと、Flex BuilderというFlexの統合開発環境を手に入れることができますが、とりあえず、Flexを使ってみたいという場合はオープンソースで公開されているFlex SDKを使うのが吉だと思います。まぁ、本気でFlexの開発をするんだったらFlex Builderは必須だと思いますけど。そういえば、Flexの統合開発環境ではFlex Developerというのもあるらしいですけど、Windows向けなのでよく知りません。

で、Flex SDKにはコンパイルするためのツールはありますが、コードはテキストエディタを使って書く必要があります。コードアシストがないテキストエディタでコードを書くのは苦行にしかならないので、Emacs") (link nil "http://nabeo.blogspot.com/2011/04/emacsmxmlactionscript3-mumamo.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("emacs23.3をinline_patch付きでビルドしてみた" nil "http://nabeo.blogspot.com/2011/03/emacs233inlinepatch.html" (19851 18744) new 3 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-6476048830179823834") (pubDate nil "Thu, 24 Mar 2011 13:38:00 +0000") (atom:updated nil "2011-03-24T22:48:04.585+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "inline patch for cocoa emacs") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (category ((domain . "http://www.blogger.com/atom/ns#")) "Mac OS X") (title nil "emacs23.3をinline_patch付きでビルドしてみた") (atom:summary ((type . "text")) "めでたくemacs 23.3がリリースされました。inline_patchのリリースアナウンスは出ていませんが、一応svnレポジトリにコミットされているみたいです。今回からは今までのパッチの他にCocoa Emacsのピコピコ問題([Macemacsjp-users 1678]から始まるスレッド)とxcode4でビルドするためのパッチが同梱されているようです。

僕の環境では必要ない(Mac OS X 10.6 + Xcode3)環境なのですが、一応xcode4でビルドするためのパッチも当てました。ビルドの手順は下記の通り。ちなみに、inline_patchのリビジョンは574です。

% mkdir -p ~/src/emacs23.3
% cd ~/src/emacs23.3
% wget http://ftp.gnu.org/gnu/emacs/emacs-23.3.tar.bz2") (link nil "http://nabeo.blogspot.com/2011/03/emacs233inlinepatch.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("Elecom社製USB-シリアル変換ケーブル(UC-SGT)をMac OS X 10.6で使う" nil "http://nabeo.blogspot.com/2011/02/elecomusb-uc-sgtmac-os-x-106.html" (19793 20992) new 4 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-2194199732520412336") (pubDate nil "Tue, 08 Feb 2011 14:24:00 +0000") (atom:updated nil "2011-02-08T23:24:43.048+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "UC-SGT") (category ((domain . "http://www.blogger.com/atom/ns#")) "PL2303") (category ((domain . "http://www.blogger.com/atom/ns#")) "Mac OS X") (title nil "Elecom社製USB-シリアル変換ケーブル(UC-SGT)をMac OS X 10.6で使う") (atom:summary ((type . "text")) "Emacs関連のポストが続いたり、Mac Book Proを買って浮かれポンチなポストをしたりしていますが、本業はインフラよりのネットワークエンジニアだったりします。で、本業で使うかどうかは別として、シリアルケーブルはネットワークエンジニアの嗜みとして使えるようにしておくべきでしょう、というポストです。

まず、僕が所有しているUSB-シリアル変換ケーブルはElecom社のUC-SGTという製品です。こいつは自分がM1の時に買ったので、かれこれ8年くらいの付き合いです。

Elecom社のサイトではWindows向けのドライバは提供されていますが、Mac向けのドライバは提供されていません。ただし、UC-SGTはProlific社のPL2303というチップを積んでいて、Prolific社のサイトではMac向けのドライバが提供されています。

というわけで、Prolific社製のドライバを") (link nil "http://nabeo.blogspot.com/2011/02/elecomusb-uc-sgtmac-os-x-106.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("mac os xだったらbrowse-url-browser-functionはopenでしょう" nil "http://nabeo.blogspot.com/2011/02/mac-os-xbrowse-url-browser-functionopen.html" (19792 3128) new 5 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-7516391770649193652") (pubDate nil "Mon, 07 Feb 2011 15:14:00 +0000") (atom:updated nil "2011-02-08T00:17:49.368+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "browse-url-browser-function") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (category ((domain . "http://www.blogger.com/atom/ns#")) "Mac OS X") (title nil "mac os xだったらbrowse-url-browser-functionはopenでしょう") (atom:summary ((type . "text")) "ということで、以下の設定を適当なところに追加して幸せになりました。

(setq browse-url-browser-function 'browse-url-generic)
(setq browse-url-generic-program
(if (file-exists-p \"/usr/bin/open\")
\"/usr/bin/open\"))
") (link nil "http://nabeo.blogspot.com/2011/02/mac-os-xbrowse-url-browser-functionopen.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("emacsでネットワークインターフェイスにアドレスが付いているときだけ実行するようなelisp (改)" nil "http://nabeo.blogspot.com/2011/01/emacselisp_28.html" (19778 54112) new 6 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-5117532771590427760") (pubDate nil "Fri, 28 Jan 2011 14:32:00 +0000") (atom:updated nil "2011-01-28T23:32:58.598+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "emacsでネットワークインターフェイスにアドレスが付いているときだけ実行するようなelisp (改)") (atom:summary ((type . "text")) "emacsでネットワークインターフェイスにアドレスが付いているときだけ実行するようなelispでゴニョゴニョしたelispだけど、ちょっとダサいので、dolistを使って書きなおしてみた。で、書きなおした結果がこう。
(setq network-interface-names '(\"en0\" \"en1\")) ; ネットワークインターフェイスの名前のリスト
(dolist (currnet-network-interface-name network-interface-names)
  (if (car (network-interface-info currnet-network-interface-name))
      (progn
        ;; ネットワークアドレスが付いているネットワークインターフェイスを検出したら実行する処理を書く
        (return t") (link nil "http://nabeo.blogspot.com/2011/01/emacselisp_28.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("anything-config.elで定義されている、anything-c-find-files-icons-directoryでコケる (解決編)" nil "http://nabeo.blogspot.com/2011/01/anything-configelanything-c-find-files_25.html" (19774 49616) new 7 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-2894668493850448739") (pubDate nil "Tue, 25 Jan 2011 12:28:00 +0000") (atom:updated nil "2011-01-25T21:54:05.566+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "anything") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "anything-config.elで定義されている、anything-c-find-files-icons-directoryでコケる (解決編)") (atom:summary ((type . "text")) "先日の問題は解決しました。ちょっと不恰好だけですけど、以下のパッチをanything-config.elに当てるとひとまず解決です。

--- anything-config.el.orig     2011-01-21 23:13:54.000000000 +0900
+++ anything-config.el  2011-01-25 16:46:04.000000000 +0900
@@ -737,7 +737,9 @@

(defcustom anything-c-find-files-icons-directory
(and (window-system)
-       (concat (car image-load-path) \"tree-widget/default\"))
+       (dolist (i image-load-path)
+         (if ") (link nil "http://nabeo.blogspot.com/2011/01/anything-configelanything-c-find-files_25.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("anything-config.elで定義されている、anything-c-find-files-icons-directoryでコケる" nil "http://nabeo.blogspot.com/2011/01/anything-configelanything-c-find-files.html" (19769 42496) new 8 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-1446742735886741906") (pubDate nil "Fri, 21 Jan 2011 15:28:00 +0000") (atom:updated nil "2011-01-22T01:16:37.151+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "anything") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "anything-config.elで定義されている、anything-c-find-files-icons-directoryでコケる") (atom:summary ((type . "text")) "世間の流れから3周ぐらい遅れて、ちょっとした思いつきでanythingを使い始めることにした。

導入はauto-install.elを入れて、auto-install-batchでanythingを指定して、(require 'anything-startup)をemacsの設定ファイルに書けばよいだけ。簡単ですね。

で、さっくり導入を終わらせていざemacsを立ち上げてみると、エラーで止まってしまう。emacsで吐かせたエラーは下記のとおり。
Debugger entered--Lisp error: (wrong-type-argument sequencep mew-icon-directory)
concat(mew-icon-directory \"tree-widget/default\")
(and (window-system) (concat (car ") (link nil "http://nabeo.blogspot.com/2011/01/anything-configelanything-c-find-files.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("GeekToolの設定" nil "http://nabeo.blogspot.com/2011/01/geektool.html" (19764 18276) new 9 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-5506822952180851084") (pubDate nil "Mon, 17 Jan 2011 13:43:00 +0000") (atom:updated nil "2011-01-17T22:51:51.220+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "Mac OS X") (category ((domain . "http://www.blogger.com/atom/ns#")) "GeekTool") (title nil "GeekToolの設定") (atom:summary ((type . "text")) "別エントリで書いていたGeekToolの設定。
uptime
#!/bin/sh
uptime| \\
awk '{printf \"Uptime: \" $3 \" \" $4 \" \" $5 \" \"}'; top -l 1 | \\
awk '/PhysMem/ {printf \"RAM : \" $8 \", \" }' ; top -l 2 | \\
awk '/CPU usage/ && NR > 5 {print $6, $7=\":\", $8, $9=\"user\", $10, $11=\"sys\", $12, $13}' 2> /dev/null

ps
ps -axr -o %cpu,%mem,user,comm | head -n 21

getaddr
#!/bin/bash
echo \"Active Network Interfaces\"
for netif in `netstat -rn ") (link nil "http://nabeo.blogspot.com/2011/01/geektool.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("Mac OS X 10.6 (Snow Leopard)に入れたアプリケーション" nil "http://nabeo.blogspot.com/2011/01/mac-os-x-106-snow-leopard.html" (19764 17316) new 10 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-3927830377610334057") (pubDate nil "Mon, 17 Jan 2011 13:27:00 +0000") (atom:updated nil "2011-01-17T22:37:04.453+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "Mac OS X") (title nil "Mac OS X 10.6 (Snow Leopard)に入れたアプリケーション") (atom:summary ((type . "text")) "昨年末に自宅で使用するMacBook Pro 13inchを購入したので、メモがわりにエントリをつくっておく。

まずは/Applicationsに入れたアプリケーション。

ClamXav.app
アンチウイルスアプリケーション
今は2系のベータが取れているので、そっちを入れる
Alfred.app
 ランチャーソフト
coral.app
後述のEmacs.appからプリンタに印刷するときに使う
Cyberduck.app
FTPクライアントアプリケーション
Dropbox.app
クラウド(笑)型ファイル共有サービスのクライアントアプリケーション
GitX.app
gitのGUIフロントエンド
Google Chrome.app
Webブラウザ
FirefoxやSafariよりも便利
Growl.app
各種アプリケーションの通知をしてくれる

iTerm.app (iTerm2)
") (link nil "http://nabeo.blogspot.com/2011/01/mac-os-x-106-snow-leopard.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("emacsでネットワークインターフェイスにアドレスが付いているときだけ実行するようなelisp" nil "http://nabeo.blogspot.com/2011/01/emacselisp.html" (19762 64508) new 11 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-4541533270756537643") (pubDate nil "Sun, 16 Jan 2011 14:09:00 +0000") (atom:updated nil "2011-01-16T23:23:00.195+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "emacsでネットワークインターフェイスにアドレスが付いているときだけ実行するようなelisp") (atom:summary ((type . "text")) "Emacs の init.el でネットワークインターフェイスにアドレスが付いているときだけある関数を実行したいときはどーするんだ、という疑問からリファレンスを引き引き作ってみた。まず、Emacs 23.2で使える elisp の標準関数としてnetwork-interface-infoという関数が用意されている。この関数はマニュアルでは下記のように説明されている。
network-interface-info is a built-in function in `C source code'.

(network-interface-info IFNAME)

Return information about network interface named IFNAME.
The return value is a list (ADDR BCAST NETMASK HWADDR ") (link nil "http://nabeo.blogspot.com/2011/01/emacselisp.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("OpenBSDでdhcpサーバを冗長化する" nil "http://nabeo.blogspot.com/2010/06/openbsddhcp.html" (19464 55596) new 12 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-8003966802316493657") (pubDate nil "Fri, 04 Jun 2010 10:45:00 +0000") (atom:updated nil "2010-06-04T19:53:19.121+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "dhcpd") (category ((domain . "http://www.blogger.com/atom/ns#")) "openbsd") (category ((domain . "http://www.blogger.com/atom/ns#")) "冗長構成") (title nil "OpenBSDでdhcpサーバを冗長化する") (atom:summary ((type . "text")) "DHCPDの冗長構成
OpenBSDのdhcpd(8)にSYNCHRONISATIONという章がある。どうやら、dhcpdで払い出したアドレスを複数のホスト間でリアルタイムに同期できるらしい。この記述を参考にして冗長構成をとるように設定する。
/etc/dhcpd.conf
全てのホストで同一のdhcpd.confを保持する必要がある。
/etc/rc.conf と dhcpd の起動オプション
dhcpd の起動オプションに -Y と -y という同期のためのオプションが用意されている。それぞれの意味は下記のとおり。
-Y
同期メッセージを受信するためのNIC、もしくはIPv4アドレスを記述する。コロンで区切ればマルチキャスト用TTLを指定できる。TTLを記述していない場合はデフォルト値の1が適用される。
-y
同期メッセージを送信するためのNIC、もしくはIPv4アドレスを記述する。") (link nil "http://nabeo.blogspot.com/2010/06/openbsddhcp.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("emacs23でインラインパッチが使えるようになった" nil "http://nabeo.blogspot.com/2009/06/emacs23.html" (18985 1880) new 13 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-3621086059203000474") (pubDate nil "Fri, 05 Jun 2009 11:54:00 +0000") (atom:updated nil "2009-06-05T21:33:52.210+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "inline patch for cocoa emacs") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "emacs23でインラインパッチが使えるようになった") (atom:summary ((type . "text")) "[Macemacsjp-users 1649]ではしもと氏からemacs23で使えるインラインパッチをSVNのリポジトリに登録した、という投稿があった。実は結構前からCarbon Emacsからemacs23に移行したいのだが、インラインパッチがあたらないため、移行を見送っていた。

今回のパッチでとりあえず動くようになったので、その顛末を書いておく。

まずはCVSでemacsのソースを落としてくる。

最近、cvs.savannha.gnu.orgがRAIDトラブルでサービス不能になっていたが、2009年6月4日には復旧していた。中の人に感謝しつつ、emacsのソースを落とす。


% cvs -d:pserver:anonymous@cvs.savannha.gnu.org:/sources/emacs login
% cvs -z3 -d:pserver:anonymous@") (link nil "http://nabeo.blogspot.com/2009/06/emacs23.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("gmailのimap機能をwanderlustから使ってみる その2" nil "http://nabeo.blogspot.com/2009/06/gmailimapwanderlust-2.html" (18985 800) new 14 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-9138034938927502354") (pubDate nil "Fri, 05 Jun 2009 11:36:00 +0000") (atom:updated nil "2009-06-05T20:52:33.042+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "starttls") (category ((domain . "http://www.blogger.com/atom/ns#")) "gmail") (category ((domain . "http://www.blogger.com/atom/ns#")) "wanderlust") (category ((domain . "http://www.blogger.com/atom/ns#")) "imap") (title nil "gmailのimap機能をwanderlustから使ってみる その2") (atom:summary ((type . "text")) "ずーと昔にgmailのimap機能をwanderlustから使ってみるていう記事をポストしたんだけど、どうやら古い情報になってしまったぽい。昔の記事ではsmtpにsslを使えと書いていたが、今のGMailの仕様ではstarttlsを使えといっている。今回は情報をアップデートして、環境を作り直すときに不幸にならないようにしておく。


(setq wl-smtp-posting-user \"gmailのメールアドレス\")
(setq wl-smtp-posting-server \"smtp.gmail.com\")
(setq wl-authenticate-type \"login\")
(setq wl-smtp-posting-port 587)
(setq wl-smtp-connection-type 'starttls)
(setq ") (link nil "http://nabeo.blogspot.com/2009/06/gmailimapwanderlust-2.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("OpenBSD 4.5の/var/backupに感動した話" nil "http://nabeo.blogspot.com/2009/06/openbsd-45varbackup.html" (18979 50336) new 15 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-5265093463130151132") (pubDate nil "Mon, 01 Jun 2009 12:08:00 +0000") (atom:updated nil "2009-06-01T21:42:34.736+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "openbsd") (title nil "OpenBSD 4.5の/var/backupに感動した話") (atom:summary ((type . "text")) "最近、色々考えることがあって、OpenBSD 4.5をまじめに使ってみている。

で、感動したのがOpenBSD(他の*BSDでも同じだと思うけど)は/var/backupに/etcの下にあるコンフィグファイルとかのバックアップを2世代分保持していて、変更があったらdaily cronで差分をroot宛てに\"hostname.domain daily output\"ていうsubjectで送信してくれる。つまり、このメールを後生大事にとっておくとマシンに万が一のことがあったら何とか復旧できるかもしれない。まぁ、こういう重要なファイルは自分でバックアップをとっておくとか、設定内容はちゃんとメモしておくとかすればいいんだけど、往々にしてそんなめんどくさいことは後回しになってしまう。なので、このシステムはずぼらな鯖管には嬉しすぎるシステムなわけ。

ただ、OpenBSDはあとからports") (link nil "http://nabeo.blogspot.com/2009/06/openbsd-45varbackup.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("elscreen-gfのチートシート" nil "http://nabeo.blogspot.com/2009/01/elscreen-gf.html" (18809 42616) new 16 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-9203054768870349375") (pubDate nil "Fri, 23 Jan 2009 11:14:00 +0000") (atom:updated nil "2009-01-29T18:27:48.669+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "global") (category ((domain . "http://www.blogger.com/atom/ns#")) "elscreen-gf") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "elscreen-gfのチートシート") (atom:summary ((type . "text")) "とーぜん、開発はemacsを使っていています。だって便利だもん。
で、コードを読むときにこの関数てどこで使われているか/定義されているかを知りたいときは多々あります。根性でgrepしてもいいですが、世の中にはGNU ID UtilsとかGNU GLOBALとか便利なツールもあるので、こういうツールを使ったほうが時間の節約にもなります。 しかも、emacsから使うならelscreen-gfという便利なlispがあります。まぁ、このあたりはelscreen-gfとかで検索したら色々出てくると思うからばっさり省略。

今日の本題はelscreen-gfでglobalを使うときのチートシートです。

elscreen-gfはglobalだけじゃなく、上記のGNU ID Utilsやgrepなども使えますが、phpの開発が主体なのでGNU GLOBALしか使っていません。一応、たしなみとしてGNU") (link nil "http://nabeo.blogspot.com/2009/01/elscreen-gf.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("ptp遊び (その後)" nil "http://nabeo.blogspot.com/2009/01/ptp.html" (18804 15816) new 17 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-3379363461184692861") (pubDate nil "Mon, 19 Jan 2009 08:46:00 +0000") (atom:updated nil "2009-01-19T18:04:32.941+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "ptp") (category ((domain . "http://www.blogger.com/atom/ns#")) "Linux") (category ((domain . "http://www.blogger.com/atom/ns#")) "Fedora") (title nil "ptp遊び (その後)") (atom:summary ((type . "text")) "かなーり以前にptp遊びをしていて、このBlogでもptpcamで遊んだら面白そう、というエントリを残したんだけど、実はあのあとにちょっとゴタゴタあってptpではちゃんと遊んでいませんでした。ただ、このBlogにGoogleからptpcamというキーワードでたどり着いている人がいるので、ちょっとだけアップデート。

て、言っても、Fedora 10でちょろっとだけ使ってみた、ということだけです。

えと、まず昔にlibptpで遊んだときはgcc4でコンパイルできないよ、ぎゃおーと叫んでいたと思いますが、Fedora 10ではきっちりコンパイルできました。とくにトリッキーなことはしていないです。ふつーに./configure && make && sudo make installでインストールまでいけると思います。ただ、libusb-develは必要かも。つかったバージョンは") (link nil "http://nabeo.blogspot.com/2009/01/ptp.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("なぞのUCD-DISKIO-MIB" nil "http://nabeo.blogspot.com/2009/01/hoge.html" (18785 59740) new 18 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-5249731206114170622") (pubDate nil "Mon, 05 Jan 2009 11:05:00 +0000") (atom:updated nil "2009-01-05T20:09:02.977+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "diskIONRead") (category ((domain . "http://www.blogger.com/atom/ns#")) "snmp") (category ((domain . "http://www.blogger.com/atom/ns#")) "Fedora") (category ((domain . "http://www.blogger.com/atom/ns#")) "diskIONWritten") (category ((domain . "http://www.blogger.com/atom/ns#")) "diskIODevice") (title nil "なぞのUCD-DISKIO-MIB") (atom:summary ((type . "text")) "会社のFedoraなマシンのサーバステータスをrrdtoolsを使ってグラフ化してます。グラフ化している値の中でUCD-DISKIO-MIBのdiskIONReadとdiskIONWrittenを使ったディスクIOの読み込みと書き込みをグラフ化しているんだけど、最近ちょっと変。


どう変なのかというと、sdaのつもりでとっていたdiskIONReadやdiskIONWrittenの値がループでバイスの値になっているぽい。つまり、
  
    nabeo@foo:~[8413]% snmpwalk -c public -v 1 bar diskIODevice
    UCD-DISKIO-MIB::diskIODevice.1 = STRING: ram0
    UCD-DISKIO-MIB::diskIODevice.2 = STRING: ram1
    ") (link nil "http://nabeo.blogspot.com/2009/01/hoge.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("org-modeでTODOを管理" nil "http://nabeo.blogspot.com/2009/01/org-modetodo.html" (18785 55240) new 19 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-1475005235684298298") (pubDate nil "Mon, 05 Jan 2009 09:50:00 +0000") (atom:updated nil "2009-01-05T19:11:12.437+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "org-mode") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "org-modeでTODOを管理") (atom:summary ((type . "text")) "一年の計は元旦にあり、ではないが今年から自分のタスクをorg-modeを使って管理してみようと思う。ここでは自分用に設定と使い方をメモとして残しておく。

そもそも、これまでは自分のタスク管理は特にツールは使わず、メールやスケジュール帳などで管理をしていた。基本的にタスク処理は投入された時点での優先順位に従ってベストエフォートで行ってきたが、如何せんベストエフォートなのでドロップすることもあった。あと、自分の性能としてマルチタスクも弱いので、疑似マルチタスクでなんとか処理能力もあげたい、なんてことも考えている。

ということで、emacsの設定。今使っているemacsはM-x emacs-versionとするとGNU Emacs 22.3.1 (i386-apple-darwin9.5.0, Carbon Version 1.6.0) of 2008-11-01 on ") (link nil "http://nabeo.blogspot.com/2009/01/org-modetodo.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("Carbon Emacsでgclientを使う" nil "http://nabeo.blogspot.com/2008/11/carbon-emacsgclient.html" (18711 55764) new 20 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-664418185827550438") (pubDate nil "Mon, 10 Nov 2008 06:51:00 +0000") (atom:updated nil "2008-11-10T15:56:32.135+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "macports") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (title nil "Carbon Emacsでgclientを使う") (atom:summary ((type . "text")) "昔のエントリにCarbon Emacsでgclientが使えないよーーー。ぎゃぼー。と書いた気がするけど。何となく原因が分かりました。わかってしまえば、アホみたいな原因でした。

原因はcurlのビルド方法(というか、configureのオプション)にあったようです。

僕のマシンはmacportsで管理しているんだけど、僕のマシンではPATHの関係上、MacOS X付属のcurlよりもmacportsでインストールしているcurlが優先されます。このmacports版のcurlではデフォルトでは機能が制限されていて、インストールする際に必要な機能をvariantsで探して有効にする必要があります。このcurlのvariantsにsslサポートも含まれていて、僕の環境では無印のcurlがインストールされていたのでgclientがhttpsでアクセスしようとしてもcurlがsslを理解") (link nil "http://nabeo.blogspot.com/2008/11/carbon-emacsgclient.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("Carbon Emacsのphp-mode.elとmumamo" nil "http://nabeo.blogspot.com/2008/06/carbon-emacsphp-modeelmumamo.html" (18536 55864) new 21 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-965631731301362910") (pubDate nil "Mon, 30 Jun 2008 13:06:00 +0000") (atom:updated nil "2008-06-30T22:29:09.646+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (category ((domain . "http://www.blogger.com/atom/ns#")) "php") (category ((domain . "http://www.blogger.com/atom/ns#")) "mumamo") (title nil "Carbon Emacsのphp-mode.elとmumamo") (atom:summary ((type . "text")) "かなり以前に「Carbon Emacsでmumamoとphp-modeをうまく連携できない」と叫んでいたが、なんとか解決できた。解決できたと言っても、「やっぱり、僕ってお間抜けね。てへ。」みたいな感じ。結論から言うと、本家のphp-modeを使ってはいたのが原因ぽい。あと、この記事で言及しているCarbon Emacsは2008年春版ね。

Carbon EmacsにはnXhtml modeが最初からインストールされていて、設定までがすんでいる。で、nXhtml modeにはmumamoに適応した、というよりもnXhtml modeに最適化されたphp-modeが入っている。ちなみに、nXml modeに付属しているphp-modeのバージョンは1.4.1-nxhtmlで本家で配布しているバージョンは1.4.0だった。

というわけで、自前の環境にあるphp-mode.elを読み込まずに") (link nil "http://nabeo.blogspot.com/2008/06/carbon-emacsphp-modeelmumamo.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("test from g-client" nil "http://nabeo.blogspot.com/2008/04/test-from-g-client.html" (18445 43160) new 22 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-9155406419307495069") (pubDate nil "Tue, 22 Apr 2008 08:58:00 +0000") (atom:updated nil "2008-04-22T17:58:52.346+09:00") (title nil "test from g-client") (atom:summary ((type . "text")) "
    
	  
	  
		test from g-client
	  
    
  ") (link nil "http://nabeo.blogspot.com/2008/04/test-from-g-client.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("spamフィルタを変えてみた" nil "http://nabeo.blogspot.com/2007/12/spam.html" (18290 12280) new 23 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-2144552547424011028") (pubDate nil "Wed, 26 Dec 2007 10:42:00 +0000") (atom:updated nil "2011-01-17T22:46:45.401+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "bogofilter") (category ((domain . "http://www.blogger.com/atom/ns#")) "wanderlust") (category ((domain . "http://www.blogger.com/atom/ns#")) "emacs") (category ((domain . "http://www.blogger.com/atom/ns#")) "Mac OS X") (title nil "spamフィルタを変えてみた") (atom:summary ((type . "text")) "wanderlustに移行して少したったけど、やっぱりspamassassinのspam判定の遅さには耐えられない。ということで、spamassassinを捨ててbogofilterに乗り換えてみた。幸い、MacPortsにはbogofilterのパッケージがあるので苦労せずにインストールまではできた。

で、困ったのはbogofilterの学習時にkakasiとnkfを使うべきかどうかということ。ググってみたら、使う人と使わない人が半々くらい。むぅぅぅ。wlのコードを読んでみると、kakasiとnkfはbogofilterを起動しているときに使っていないぽい。というわけで、kakasiとnkfは使わずに学習させてみた。学習はこんな感じ。


spamメールの学習(spamメールを保存しているディレクトリで)
for i in *; do
bogofilter -s $i
done


") (link nil "http://nabeo.blogspot.com/2007/12/spam.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("記憶にないけど、ある" nil "http://nabeo.blogspot.com/2007/12/blog-post.html" (18274 27596) new 24 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-4577287270508296155") (pubDate nil "Fri, 14 Dec 2007 11:41:00 +0000") (atom:updated nil "2011-01-17T22:47:08.213+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "macports") (category ((domain . "http://www.blogger.com/atom/ns#")) "docbook-xsl") (category ((domain . "http://www.blogger.com/atom/ns#")) "xmlcatmgr") (category ((domain . "http://www.blogger.com/atom/ns#")) "Mac OS X") (title nil "記憶にないけど、ある") (atom:summary ((type . "text")) "久しぶりにMacPortsのメンテナンスで、必要なパッケージをアップグレードしようとしたら、gtk2のアップグレードでこけた。ていうか、gtk2の依存関係に新しくgtk-docが追加されて、このgtk-docのconfigureスクリプトが走っている箇所でエラーを吐いているみたい。以下がエラー内容の抜粋。


checking for xsltproc... /opt/local/bin/xsltproc
checking for XML catalog (/opt/local/etc/xml/catalog)... found
checking for xmlcatalog... /opt/local/bin/xmlcatalog
checking for DocBook XML DTD V4.1.2 in XML catalog... found
checking for ") (link nil "http://nabeo.blogspot.com/2007/12/blog-post.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))) ("続:その黒い小鳥は美しい歌を奏でるか??" nil "http://nabeo.blogspot.com/2007/11/blog-post_08.html" (18226 48284) new 25 nil nil ((guid ((isPermaLink . "false")) "tag:blogger.com,1999:blog-2703535343860163184.post-1687047229360945086") (pubDate nil "Thu, 08 Nov 2007 07:37:00 +0000") (atom:updated nil "2007-11-08T16:41:06.326+09:00") (category ((domain . "http://www.blogger.com/atom/ns#")) "Linux") (category ((domain . "http://www.blogger.com/atom/ns#")) "Songbird") (title nil "続:その黒い小鳥は美しい歌を奏でるか??") (atom:summary ((type . "text")) "というわけで、自宅のLinux BoxでSongbirdを試してみた。結果はうまくmp3ファイルを読み込んでくれなくて、残念な結果に終わりました。ちなみに自宅のLinux Boxはfedora core 7で基本的にfedora project由来のrpmしか使っていないです。

ちなみに、前回の追記にあった起動時のエラーはどうやらリモートからXを飛ばしてきた時に発生するもよう。自宅のLinux Boxで試したときは特にエラーは出ずに起動しました。") (link nil "http://nabeo.blogspot.com/2007/11/blog-post_08.html") (author nil "noreply@blogger.com (nabeo)") (thr:total nil "0"))))