;; -*- coding: utf-8 -*-
(("Hatena::Diary::Neko::kak 500 Internal Server Error" "Hatena::Diary::Neko::kak 500 Internal Server Error" "http://d.hatena.ne.jp/nekokak/" (20813 17145 369024 392000) feed 0 nil nil ((title nil "Hatena::Diary::Neko::kak 500 Internal Server Error") (link nil "http://d.hatena.ne.jp/nekokak/") (description nil "Hatena::Diary::Neko::kak 500 Internal Server Error") (dc:creator nil "nekokak") (dc:date nil "2011-01-12T12:01:35+09:00") (items nil (rdf:Seq nil (rdf:li ((rdf:resource . "http://d.hatena.ne.jp/nekokak/20110112"))) (rdf:li ((rdf:resource . "http://d.hatena.ne.jp/nekokak/20101015/1287106817"))) (rdf:li ((rdf:resource . "http://d.hatena.ne.jp/nekokak/20100421/1271814529"))) (rdf:li ((rdf:resource . "http://d.hatena.ne.jp/nekokak/20100420/1271751343"))) (rdf:li ((rdf:resource . "http://d.hatena.ne.jp/nekokak/20100420/1271732378"))) (rdf:li ((rdf:resource . "http://d.hatena.ne.jp/nekokak/20100413/1271139755"))))))) ("2011-01-12" "MacBook Air 11インチ欲しい！ ください" "http://d.hatena.ne.jp/nekokak/20110112" (19756 61184) new 1 nil nil ((title nil "2011-01-12") (link nil "http://d.hatena.ne.jp/nekokak/20110112") (description nil " MacBook Air 11インチ欲しい！ ください ") (content:encoded nil "
<div class=\"section\"><p><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/MacBook%20Air%2011%A5%A4%A5%F3%A5%C1%CD%DF%A4%B7%A4%A4%A1%AA\">MacBook Air 11インチ欲しい！</a></p><p>ください</p></div>
") (dc:creator nil "nekokak") (dc:date nil "2011-01-12"))) ("[perl]YAPC::Asia 2010" "自分のトークの宣伝 http://blog.nekokak.org/show?guid=YoQmCv3X3xGA7lhooKD0CA こっちをみてね。" "http://d.hatena.ne.jp/nekokak/20101015/1287106817" (19639 45313) new 2 nil nil ((title nil "[perl]YAPC::Asia 2010") (link nil "http://d.hatena.ne.jp/nekokak/20101015/1287106817") (description nil " 自分のトークの宣伝 http://blog.nekokak.org/show?guid=YoQmCv3X3xGA7lhooKD0CA こっちをみてね。 ") (content:encoded nil "
<div class=\"section\"><p>自分のトークの宣伝</p><p><a href=\"http://blog.nekokak.org/show?guid=YoQmCv3X3xGA7lhooKD0CA\" target=\"_blank\">http://blog.nekokak.org/show?guid=YoQmCv3X3xGA7lhooKD0CA</a></p><p>こっちをみてね。</p></div>
") (dc:creator nil "nekokak") (dc:date nil "2010-10-15T10:40:17+09:00") (dc:subject nil "perl"))) ("[life]blog" "最近はてながけっこう重いので http://blog.nekokak.org/ こっちをベースにしようかなと思ったり思わなかったり。 まぁここのサーバもVPSで重かったりするんですけど。" "http://d.hatena.ne.jp/nekokak/20100421/1271814529" (19406 22913) new 3 nil nil ((title nil "[life]blog") (link nil "http://d.hatena.ne.jp/nekokak/20100421/1271814529") (description nil " 最近はてながけっこう重いので http://blog.nekokak.org/ こっちをベースにしようかなと思ったり思わなかったり。 まぁここのサーバもVPSで重かったりするんですけど。 ") (content:encoded nil "
<div class=\"section\"><p>最近はてながけっこう重いので</p><p><a href=\"http://blog.nekokak.org/\" target=\"_blank\">http://blog.nekokak.org/</a></p><p>こっちをベースにしようかなと思ったり思わなかったり。</p><p>まぁここのサーバもVPSで重かったりするんですけど。</p></div>
") (dc:creator nil "nekokak") (dc:date nil "2010-04-21T10:48:49+09:00") (dc:subject nil "life"))) ("[perl][dbix-skinny]DBIx::Skinny::Cache" "というのをつくりました。 http://github.com/nekokak/p5-dbix-skinny-cache package Mock::Basic; use DBIx::Skinny setup => +{ dsn => ’dbi:SQLite:’, username => ’’, password => ’’, connect_options => { AutoCommit => 1 }, }; use DBIx::S" "http://d.hatena.ne.jp/nekokak/20100420/1271751343" (19405 25263) new 4 nil nil ((title nil "[perl][dbix-skinny]DBIx::Skinny::Cache") (link nil "http://d.hatena.ne.jp/nekokak/20100420/1271751343") (description nil " というのをつくりました。 http://github.com/nekokak/p5-dbix-skinny-cache package Mock::Basic; use DBIx::Skinny setup => +{ dsn => ’dbi:SQLite:’, username => ’’, password => ’’, connect_options => { AutoCommit => 1 }, }; use DBIx::S") (content:encoded nil "
<div class=\"section\"><p>というのをつくりました。</p><p><a href=\"http://github.com/nekokak/p5-dbix-skinny-cache\" target=\"_blank\">http://github.com/nekokak/p5-dbix-skinny-cache</a></p><pre class=\"syntax-highlight\"><span class=\"synStatement\">package</span><span class=\"synType\"> Mock::Basic;</span><span class=\"synStatement\">use </span>DBIx::Skinny <span class=\"synConstant\">setup </span>=&#62; +{
    <span class=\"synConstant\">dsn </span>=&#62; <span class=\"synConstant\">'dbi:SQLite:'</span>,
    <span class=\"synConstant\">username </span>=&#62; <span class=\"synConstant\">''</span>, 
    <span class=\"synConstant\">password </span>=&#62; <span class=\"synConstant\">''</span>, 
    <span class=\"synConstant\">connect_options </span>=&#62; { <span class=\"synConstant\">AutoCommit </span>=&#62; <span class=\"synConstant\">1</span> },
};
<span class=\"synStatement\">use </span>DBIx::Skinny::Mixin <span class=\"synConstant\">modules </span>=&#62; [<span class=\"synConstant\">'Cache::Memory'</span>];

<span class=\"synComment\"># in your script:</span><span class=\"synStatement\">use </span>Mock::Basic;
<span class=\"synComment\"># set data</span>
Mock::Basic-&#62;memory_cache-&#62;param(<span class=\"synConstant\">foo </span>=&#62; <span class=\"synConstant\">'bar'</span>);
<span class=\"synComment\"># get data</span>
Mock::Basic-&#62;memory_cache-&#62;param(<span class=\"synConstant\">'foo'</span>); <span class=\"synComment\"># get bar </span><span class=\"synComment\"># delete data</span>
Mock::Basic-&#62;memory_cache-&#62;<span class=\"synStatement\">delete</span>(<span class=\"synConstant\">'foo'</span>);
<span class=\"synComment\"># get_callback</span>
Mock::Basic-&#62;memory_cache-&#62;get_callback(
    <span class=\"synConstant\">foo </span>=&#62;<span class=\"synIdentifier\"></span><span class=\"synStatement\">sub</span><span class=\"synIdentifier\"></span>{
        <span class=\"synComment\"># some process.....</span><span class=\"synConstant\">'return data for cache'</span>;
    }   
);
</pre><p>こんな感じで使います。</p><br><p>Skinnyはnewしてインスタンスを生成しなくても</p><p>直接クラスからメソッド呼び出しできるので、</p><p>インスタンスからのメソッド呼び出しなのか</p><p>クラスからのメソッド呼び出しなのかを</p><p>意識することなくデータをmemoryにキャッシュさせることがこれでできるようになります。</p><br><p>Cache::MemoryとしているのはCache::Memcachedとかを作ってもいいかなと思ったからですね。</p><p>作りたい人いませんかね？</p></div>
") (dc:creator nil "nekokak") (dc:date nil "2010-04-20T17:15:43+09:00") (dc:subject nil "perl") (dc:subject nil "dbix-skinny"))) ("[perl][dbix-skinny]Re:DBIx::Skinnyのrowオブジェクトをnfeezeしようとすると死ぬ" "http://d.hatena.ne.jp/hirafoo/20100418/1271572008 こちらに DBIx::Skinnyのrowオブジェクトをnfeezeしようとすると死ぬ という項目があるんですが。まぁ死にます。 死ぬ理由はnfreezeするオブジェクト内にcoderefがあるからです。 STORABLE_freezeとかを使ってfreezeする" "http://d.hatena.ne.jp/nekokak/20100420/1271732378" (19405 6298) new 5 nil nil ((title nil "[perl][dbix-skinny]Re:DBIx::Skinnyのrowオブジェクトをnfeezeしようとすると死ぬ") (link nil "http://d.hatena.ne.jp/nekokak/20100420/1271732378") (description nil " http://d.hatena.ne.jp/hirafoo/20100418/1271572008 こちらに DBIx::Skinnyのrowオブジェクトをnfeezeしようとすると死ぬ という項目があるんですが。まぁ死にます。 死ぬ理由はnfreezeするオブジェクト内にcoderefがあるからです。 STORABLE_freezeとかを使ってfreezeする") (content:encoded nil "
<div class=\"section\"><p><a href=\"http://d.hatena.ne.jp/hirafoo/20100418/1271572008\" target=\"_blank\">http://d.hatena.ne.jp/hirafoo/20100418/1271572008</a></p><p>こちらに</p><p>DBIx::Skinnyのrowオブジェクトをnfeezeしようとすると死ぬ</p><p>という項目があるんですが。まぁ死にます。</p><p>死ぬ理由はnfreezeするオブジェクト内にcoderefがあるからです。</p><br><p>STORABLE_freezeとかを使ってfreezeすると気にHookして云々とかはできるんですが</p><p>（DBICではそういうcomponentがあります）</p><p>そもそもStorable使うときってキャッシュするときかなと思い、</p><p>キャッシュするデータは必要最低限にするべきかなと思っています。</p><br><p>なので<a href=\"http://d.hatena.ne.jp/nekokak/20090918/1253257691\" target=\"_blank\">http://d.hatena.ne.jp/nekokak/20090918/1253257691</a></p><p>ここでやってるようにrowのデータだけキャッシュするのがよいかと思っています。</p><br><p>まぁMixinでSTORABLE_freezeするやつをつくって云々はありだとは思います。</p></div>
") (dc:creator nil "nekokak") (dc:date nil "2010-04-20T11:59:38+09:00") (dc:subject nil "perl") (dc:subject nil "dbix-skinny"))) ("[perl]Perlbal::Plugin::UrlGroupリリース" "数年前に必要にかられて作って以来ずっとつかってきた Perlbal::Plugin::UrlGroupを先程CPANにupしました。 そもそもPoundのurl_groupの機能をPerlbalで使いたいところから始まって、 リクエストuriをみてどのバックエンドにreverse_proxyするかを 設定でかけるようになって" "http://d.hatena.ne.jp/nekokak/20100413/1271139755" (19396 3499) new 6 nil nil ((title nil "[perl]Perlbal::Plugin::UrlGroupリリース") (link nil "http://d.hatena.ne.jp/nekokak/20100413/1271139755") (description nil " 数年前に必要にかられて作って以来ずっとつかってきた Perlbal::Plugin::UrlGroupを先程CPANにupしました。 そもそもPoundのurl_groupの機能をPerlbalで使いたいところから始まって、 リクエストuriをみてどのバックエンドにreverse_proxyするかを 設定でかけるようになって") (content:encoded nil "
<div class=\"section\"><p>数年前に必要にかられて作って以来ずっとつかってきた</p><p>Perlbal::Plugin::UrlGroupを先程CPANにupしました。</p><p>そもそもPoundのurl_groupの機能をPerlbalで使いたいところから始まって、</p><p>リクエストuriをみてどのバックエンドにreverse_proxyするかを</p><p>設定でかけるようになっています。</p><p>まぁ最近だとnginxとかが流行ってるので、</p><p>今更Perlbalを使う人って少ないんでしょうね。</p><p>個人的には</p><p>nginxがreproxy-cacheを扱ってくれればPerlbalを使わない選択肢が出てくる気がしています。</p></div>
") (dc:creator nil "nekokak") (dc:date nil "2010-04-13T15:22:35+09:00") (dc:subject nil "perl"))))